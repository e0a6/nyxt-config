#+title: Nyxt Configuration
#+PROPERTY: header-args:lisp :tangle ~/.config/nyxt/init.lisp

* Key bindings
#+begin_src lisp
;;; set keybinding to emacs
(define-configuration buffer
  ((default-modes (append '(nyxt::emacs-mode) %slot-default%))))

;;; set C-s to search the page (see Keybinding configuration in Manual)
(define-configuration buffer
  ((override-map (let ((map (make-keymap "override-map")))
                   (define-key map
                     "C-s" 'nyxt/web-mode:search-buffer)))))
#+end_src

* Search engines
#+begin_src lisp
(defvar *my-search-engines*
  (list
   '("doi" "https://dx.doi.org/~a" "https://dx.doi.org/")
   '("py3" "https://docs.python.org/3/search.html?q=~a" "https://docs.python.org/3")
   '("ggl" "https://www.google.com/search?q=~a" "https://www.google.com/")))

(define-configuration buffer
  ((search-engines (append %slot-default%
                           (mapcar (lambda (engine) (apply 'make-search-engine engine))
                                   *my-search-engines*)))))
#+end_src

* Appearance
  Added a color scheme based on an offical [[https://nyxt.atlas.engineer/article/dark-theme.org][article]].
#+begin_src lisp
;;; Panel buffers are the same in regards to style.
(define-configuration (internal-buffer panel-buffer)
  ((style
    (str:concat
     %slot-default%
     (cl-css:css
      '((body
         :background-color "black"
         :color "lightgray")
        (hr
         :color "darkgray")
        (a
         :color "lightgray")
        (.button
         :color "lightgray"
         :background-color "gray")))))))

;;; Color config for prompt-buffer (minibuffer in Emacs parlance).
(define-configuration prompt-buffer
  ((style (str:concat
           %slot-default%
           (cl-css:css
            '((body
               :background-color "black"
               :color "#808080")
              ("#prompt-area"
               :background-color "black")
              ;; The area you input text in.
              ("#input"
               :background-color "white")
              (".source-name"
               :color "black"
               :background-color "gray")
              (".source-content"
               :background-color "black")
              (".source-content th"
               :border "1px solid lightgray"
               :background-color "black")
              ;; The currently highlighted option.
              ("#selection"
               :background-color "#37a8e4"
               :color "black")
              (.marked :background-color "darkgray"
                       :font-weight "bold"
                       :color "white")
              (.selected :background-color "black"
                         :color "white")))))))

;;; Message buffer is the small line down below where all the messages
;;; are displayed. echo-area in Emacs parlance?
(define-configuration window
  ((message-buffer-style
    (str:concat
     %slot-default%
     (cl-css:css
      '((body
         :background-color "black"
         :color "white")))))))
#+end_src

#+end_src
